{"version":3,"sources":["global.css","global/_e-images.scss","global/_e-type.scss","global/_o-list-inline.scss","global/_o-aspect.scss","global/_u-images.scss","global/_c-footer.scss","global/_o-wrap.scss","global/_u-visibility.scss","global/_t-mx-sr-only.scss","global/_g-border-box.scss","global/_e-page.scss","global/_t-mx-headings.scss","global/_c-nav.scss","global/_o-container.scss","global/_t-mx-media-queries.scss","global/_o-list-unstyled.scss","global/_t-mx-list-unstyled.scss","global/_o-grid.scss","global/_t-mx-clearfix.scss","global/_c-header.scss"],"names":[],"mappings":"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","file":"global.css","sourcesContent":["dl,figure,hr,img,ol,p,ul{margin:0 0 20px}.o-list-inline>li,img{vertical-align:middle}.o-aspect>img,.u-img-full{height:auto;width:100%}.c-footer,.o-aspect,.o-wrap,.u-sr-only{overflow:hidden}*,:after,:before{box-sizing:inherit}html{box-sizing:border-box;background:#f9f9f9;font-family:helvetica,arial,sans-serif;font-size:14px;border-top:10px solid #f14c10;line-height:1.5;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}h1,h2,h3,h4,h5,h6{margin:0 0 20px;font-size:1.2rem;line-height:1.5}a{color:#f14c10;text-decoration:none}.c-nav__item.is-current .c-nav__link,a:active,a:focus,a:hover{text-decoration:underline}hr{border:solid #bfbfbf;border-width:0 0 1px}figcaption{font-size:.85714em;font-style:italic}.o-container{padding:0 20px;margin:0 auto;width:100%;max-width:1280px}@media (min-width:768px){.o-container{width:90%}}.o-list-inline,.o-list-unstyled{list-style:none;padding:0}.o-list-inline>li{display:inline-block}.o-grid{margin-right:-8px;margin-left:-8px}.o-grid:after,.o-grid:before{content:' ';display:table}.o-grid:after{clear:both}@media (min-width:1024px){.o-grid{margin-right:-15px;margin-left:-15px}}.o-grid__column{position:relative;padding-right:8px;padding-left:8px;width:100%;min-height:1px;float:left}@media (min-width:1024px){.o-grid__column{padding-right:15px;padding-left:15px}}.o-grid__column--1{width:8.33333%}.o-grid__column--2{width:16.66667%}.o-grid__column--3{width:25%}.o-grid__column--4{width:33.33333%}.o-grid__column--5{width:41.66667%}.o-grid__column--6{width:50%}.o-grid__column--7{width:58.33333%}.o-grid__column--8{width:66.66667%}.o-grid__column--9{width:75%}.o-grid__column--10{width:83.33333%}.o-grid__column--11{width:91.66667%}.o-grid__column--12{width:100%}@media (min-width:768px){.o-grid__column--1\\@sm{width:8.33333%}.o-grid__column--2\\@sm{width:16.66667%}.o-grid__column--3\\@sm{width:25%}.o-grid__column--4\\@sm{width:33.33333%}.o-grid__column--5\\@sm{width:41.66667%}.o-grid__column--6\\@sm{width:50%}.o-grid__column--7\\@sm{width:58.33333%}.o-grid__column--8\\@sm{width:66.66667%}.o-grid__column--9\\@sm{width:75%}.o-grid__column--10\\@sm{width:83.33333%}.o-grid__column--11\\@sm{width:91.66667%}.o-grid__column--12\\@sm{width:100%}}@media (min-width:1024px){.o-grid__column--1\\@md{width:8.33333%}.o-grid__column--2\\@md{width:16.66667%}.o-grid__column--3\\@md{width:25%}.o-grid__column--4\\@md{width:33.33333%}.o-grid__column--5\\@md{width:41.66667%}.o-grid__column--6\\@md{width:50%}.o-grid__column--7\\@md{width:58.33333%}.o-grid__column--8\\@md{width:66.66667%}.o-grid__column--9\\@md{width:75%}.o-grid__column--10\\@md{width:83.33333%}.o-grid__column--11\\@md{width:91.66667%}.o-grid__column--12\\@md{width:100%}}@media (min-width:1200px){.o-grid__column--1\\@lg{width:8.33333%}.o-grid__column--2\\@lg{width:16.66667%}.o-grid__column--3\\@lg{width:25%}.o-grid__column--4\\@lg{width:33.33333%}.o-grid__column--5\\@lg{width:41.66667%}.o-grid__column--6\\@lg{width:50%}.o-grid__column--7\\@lg{width:58.33333%}.o-grid__column--8\\@lg{width:66.66667%}.o-grid__column--9\\@lg{width:75%}.o-grid__column--10\\@lg{width:83.33333%}.o-grid__column--11\\@lg{width:91.66667%}.o-grid__column--12\\@lg{width:100%}}.o-aspect{margin-bottom:20px;padding-top:100%;width:100%;position:relative}.o-aspect>img{margin:0;position:absolute;top:0;left:0}.o-aspect--2x1{padding-top:50%}.o-aspect--page{padding-top:150%}.o-aspect--batgirl{padding-top:152.75%}.c-nav__list{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;font-weight:700}.c-nav__item+.c-nav__item{margin-left:20px}.c-nav__link{display:block;color:#f14c10;text-align:center}.c-nav__warning{display:block;color:#555}.c-header{padding:20px 0 0;text-align:center}@media (min-width:768px){.c-header{padding:40px 0 20px;text-align:left}}.c-header__lockup{color:inherit}.c-header__lockup:active,.c-header__lockup:focus,.c-header__lockup:hover{text-decoration:none}.c-header__title{margin-bottom:0;font-size:2.57143rem;line-height:1;font-weight:400;color:#00587d}@media (min-width:768px){.c-header__title{font-size:3.42857rem;line-height:.8}}.c-header__tag{color:#f14c10;font-size:1rem}@media (min-width:768px){.c-header__tag{margin:0;font-size:1.28571rem}}@media (min-width:768px){.c-header__row{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}}.c-footer{margin-top:20px;padding:20px 0 0;background:#f14c10;color:#fff;font-size:.85714rem;text-align:center}@media (min-width:768px){.c-footer{margin-top:60px}}.u-img-respond{max-width:100%;height:auto}.u-hidden{display:none}@media (min-width:480px){.u-hidden\\@xs{display:none}}@media (min-width:768px){.u-hidden\\@sm{display:none}}@media (min-width:1024px){.u-hidden\\@md{display:none}}@media (min-width:1200px){.u-hidden\\@lg{display:none}}@media (min-width:1500px){.u-hidden\\@xl{display:none}}.u-sr-only{clip:rect(1px,1px,1px,1px);height:1px;width:1px;padding:0;border:0;position:absolute}\n/*# sourceMappingURL=global.css.map */","/*------------------------------------*\\\n    #IMAGES\n\\*------------------------------------*/\n\n/**\n * [1] remove spacing below inline images.\n */\nimg {\n    vertical-align: middle; // [1]\n    margin: 0 0 spacer(1);\n}\n\n\n\n\n\n/**\n * Figure\n */\nfigure {\n    margin: 0 0 spacer(1);\n}\n\n\n\n\n\nfigcaption {\n    font-size: em(12px);\n    font-style: italic;\n}\n","/*------------------------------------*\\\n    #TYPOGRAPY\n\\*------------------------------------*/\n\n/**\n * Headings\n *\n * In most cases you should avoid styling a specific heading type to have\n * custom distinct styles that would apply to all headings of that type.\n * Instead create a new component like c-heading or c-title. This may not\n * be the case when a CMS needs default headings to appear a specific way.\n */\n@include headings() {\n    margin: 0 0 spacer(1);\n    font-size: 1.2rem;\n    line-height: $base-line-height;\n}\n\n\n\n\n/**\n * Paragraphs\n */\np {\n    margin: 0 0 spacer(1);\n}\n\n\n\n\n\n/**\n * Lists\n */\nul,\nol,\ndl {\n    margin: 0 0 spacer(1);\n}\n\n\n\n\n\n/**\n * Link Styles\n */\na {\n    color: color('link');\n    text-decoration: none;\n\n    @include link-states() {\n        text-decoration: underline;\n    }\n\n}\n\n\n\n\n\n/**\n * Horizontal Rule\n */\nhr {\n    margin: 0 0 spacer(1);\n    border: solid color('grey', '25');\n    border-width: 0 0 1px;\n}\n","/*------------------------------------*\\\n    #LIST INLINE\n\\*------------------------------------*/\n\n/**\n * List with direct children displaying inline.\n * [1] All items except the first have padding.\n */\n.o-list-inline {\n    @include list-unstyled();\n\n    & > li {\n        display: inline-block;\n        vertical-align: middle;\n    }\n\n}\n","/*------------------------------------*\\\n    #ASPECT\n\\*------------------------------------*/\n\n// Config to easily generate modifiers for different image aspect ratios\n$aspect-config: (\n    '2x1': 50%,\n    'page': percentage(1200/800),\n    'batgirl': percentage(1222/800)\n);\n\n\n/**\n * Enforce an aspect ratio on a responsive image before the page loads. Uses\n * the same trick as responsive videos.\n *\n * [1] Hide any access overflow of the image in case it doesn't quite fit.\n * [2] Padding 100% creates a square by default.\n */\n.o-aspect {\n    overflow: hidden; // [1]\n    margin-bottom: spacer(1);\n    padding-top: 100%; // [2]\n    width: 100%;\n    position: relative;\n\n    & > img {\n        margin: 0;\n        width: 100%;\n        height: auto;\n        position: absolute;\n        top:  0;\n        left: 0;\n    }\n\n}\n\n\n/**\n * Loop throught the config and build out aditional sizes.\n */\n@each $prop, $value in $aspect-config {\n\n    .o-aspect--#{$prop} {\n        padding-top: $value;\n    }\n\n}\n","/*------------------------------------*\\\n    #IMAGE UTILITIES\n\\*------------------------------------*/\n\n/**\n * Image's max width conforms to the parent's width.\n */\n.u-img-respond {\n    max-width: 100%;\n    height: auto;\n}\n\n\n\n\n\n/**\n * Image matches it's containers width\n */\n.u-img-full {\n    width: 100%;\n    height: auto;\n}\n","/*------------------------------------*\\\n    #FOOTER\n\\*------------------------------------*/\n\n.c-footer {\n    overflow: hidden;\n    margin-top: spacer(1);\n    padding: spacer(1) 0 0;\n    background: #f14c10;\n    color: #fff;\n    font-size: rem(12px);\n    text-align: center;\n\n    @include media('sm') {\n        margin-top: spacer(3);\n    }\n\n}\n","/*------------------------------------*\\\n    #WRAP\n\\*------------------------------------*/\n\n/**\n * A simple wrapper that crops all content that bleeds out of it\n * Usefull for preventing scrolling on the body.\n */\n.o-wrap {\n    overflow: hidden;\n}\n","/*------------------------------------*\\\n    #VISIBILITY UTILITIES\n\\*------------------------------------*/\n\n/**\n * Visibility classes for all breakpoints\n */\n.u-hidden {\n\n    @include loop-breakpoints() {\n        display: none;\n    }\n\n}\n\n\n\n\n\n/**\n * Hide the entire tag and it's contents except for screen readers\n */\n.u-sr-only {\n    @include sr-only();\n}\n","///\n/// Hide's content in a screen reader friendly way.\n///\n@mixin sr-only() {\n    overflow: hidden;\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    width: 1px;\n    padding: 0;\n    border: 0;\n    position: absolute;\n}\n","/*------------------------------------*\\\n    #BORDER BOX\n\\*------------------------------------*/\n\n/**\n * Apply global border box.\n */\n*, *:before, *:after {\n    box-sizing: inherit;\n}\n\n\nhtml {\n    box-sizing: border-box;\n}\n","/*------------------------------------*\\\n    #PAGE\n\\*------------------------------------*/\n\n/**\n * Body\n */\nhtml {\n    background: #f9f9f9;\n    font-family: helvetica, arial, sans-serif;\n    font-size: $base-font-size;\n    line-height: 1.3;\n    border-top: 10px solid #f14c10;\n    line-height: $base-line-height;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n","///\n/// Generate a list of heading tags and classes.\n///\n/// @param {number} $from [1] - Highest heading value to start from.\n/// @param {number} $to [6] - Lowest heading value to start from.\n///\n/// @throw Error related message\n///\n/// @ignore\n/// [1] Create a placeholder that we will extend to.\n/// [2] Check that only 1-6 is being requested and $from is smaller than $to.\n/// [3] Loop through the range of $from and $to to generate and @extend the\n///     the correct classes to the placeholder.\n/// [4] $headings-counter prevents multiple headings() calls from combining on all\n///     previous %_heading-placeholder by making it unique for each call\n///\n\n$headings-counter: 0; // [4]\n\n@mixin headings($from: 1, $to: 6) {\n\n    // [1 & 4]\n    %_heading-placeholder-#{$headings-counter} {\n        @content;\n    }\n\n    // [2]\n    @if $from >= 1 and $to <= 6 and $from <= $to {\n\n        // [3]\n        @for $heading from $from through $to {\n\n            h#{$heading} {\n                @extend %_heading-placeholder-#{$headings-counter}; // [4]\n            }\n\n        }\n\n    } @else {\n        @warn '`headings()` only accepts two numbers between 1 & 6.';\n        @return null;\n    }\n\n    $headings-counter: $headings-counter + 1; // [4]\n\n}\n","/*------------------------------------*\\\n    #NAVIGATION\n\\*------------------------------------*/\n\n/**\n * Navigation list\n */\n.c-nav__list {\n    display: flex;\n    justify-content: flex-end;\n    font-weight: bold;\n}\n\n\n\n\n\n/**\n * Navigation List item\n *\n * [1] Stateful 'current' version of navigation item.\n */\n.c-nav__item {\n    & + & {\n        margin-left: spacer(1);\n    }\n}\n\n\n\n\n\n/**\n * Navigation link\n */\n.c-nav__link {\n    display: block;\n    color: color('link');\n    text-align: center;\n\n    .c-nav__item.is-current & {\n        text-decoration: underline;\n    }\n\n}\n\n\n.c-nav__warning {\n    display: block;\n    color: #555;\n}\n","/*------------------------------------*\\\n    #CONTAINER\n\\*------------------------------------*/\n\n/// Container Width\n$container-width:       1240px;\n\n/// Container left and right padding\n$container-padding:       20px;\n\n\n\n\n\n/**\n * An outer container for site content. A container should never be a child of\n * instance of it's self.\n */\n.o-container {\n    padding: 0 $container-padding;\n    margin: 0 auto;\n    width: 100%;\n    max-width: $container-padding + $container-width + $container-padding;\n\n    @include media('sm') {\n        width: 90%;\n    }\n\n}\n","///\n/// Media Queries\n///\n/// @param {string} $name - $key to use from $breakpoints-extended-config\n///\n/// @require {variable} $breakpoints-extended-config\n///\n@mixin media($name) {\n\n    @if map-has-key($breakpoints-master-config, $name) {\n        @media #{map-get($breakpoints-master-config, $name)} {\n            @content;\n        }\n    } @else {\n        @warn 'Couldn\\'t find a breakpoint named `#{$name}`.';\n    }\n\n}\n\n\n\n\n\n///\n// Alias the media mixin.\n///\n@mixin breakpoint($args...) {\n\n    @warn '`@include breakpoint()` and `@include bp()` is depricated and will be removed. Please use @media';\n\n    @include media($args...) {\n        @content;\n    }\n\n}\n\n\n@mixin bp($args...) {\n    @include breakpoint($args...) {\n        @content;\n    }\n}\n\n\n\n\n\n///\n/// Loop through the breakpoints (layout/extended), output the parent scope and\n/// nest the content in each media query. The mixin must be nested in the class\n/// you wish to generate all the breakpoint modifiers for.\n///\n/// @param {boolean} $extended - Should the mixin use the\n/// $breakpoints-extended-config\n///\n@mixin loop-breakpoints($extended: false) {\n\n    // Output a non-namespaced version. So we don't have to repeat ourselves.\n    & {\n        @content;\n    }\n\n    // Check which breakpoint config we're using.\n    $_loop-breakpoints-config: if($extended, $breakpoints-extended-config, $breakpoints-layout-config);\n\n    // Loop through the breakpoints.\n    @each $breakpoint, $media-querie in $_loop-breakpoints-config {\n\n        // Append the `@breakpoint` namespace\n        &\\@#{$breakpoint} {\n            @include media($breakpoint) {\n                @content;\n            }\n        }\n    }\n\n}\n","/*------------------------------------*\\\n    #LIST UNSTYLED\n\\*------------------------------------*/\n\n/**\n * Remove list styling from list\n */\n.o-list-unstyled {\n    @include list-unstyled();\n}\n","///\n/// Unstyled List\n///\n@mixin list-unstyled() {\n    list-style: none;\n    padding: 0;\n}\n","/*------------------------------------*\\\n    #GRID\n\\*------------------------------------*/\n\n///\n// Grid Configuration\n//\n// [1] Number of columns in the grid layout\n// [2] Breakpoints from '$breakpoints-config' to build the grid system with.\n//     Only include the ones you use. Use 'deprecated-selectors' in qa-debug to\n//     test when removing them.\n// [3] Column gutters, anything additional items other than `initial` builds\n//     out modifier classes\n// [4] Generate offset modifier classes for layout items that push content to\n//     the right as if the set number of columns was to the left of it.\n// [5] Generate source ordering modifier classes for layout items so you can\n//     swap the stacking on mobile verses desktop.\n///\n\n$grid-config: (\n    'columns':       12,\n    'breakpoints': (\n        'sm',\n        'md',\n        'lg'\n    ),\n    'gutters': (\n        'initial':   30px\n    ),\n    'offsets':       true,\n    'push-and-pull': false\n);\n\n\n// Store $grid-config map as variables...\n$grid-breakpoints:      map-get($grid-config, 'breakpoints');\n$grid-gutters:          map-get($grid-config, 'gutters');\n$grid-gutters-initial:  map-get($grid-gutters, 'initial');\n$grid-columns:          map-get($grid-config, 'columns');\n$grid-offsets:          map-get($grid-config, 'offsets');\n$grid-push-and-pull:    map-get($grid-config, 'push-and-pull');\n\n\n\n\n\n/**\n * Layout row\n *\n * [1] Additional modifier classes for layout gutters.\n */\n.o-grid {\n    @include clearfix;\n    margin-right: neg(quarter($grid-gutters-initial));\n    margin-left:  neg(quarter($grid-gutters-initial));\n\n    @include media(md) {\n        margin-right: neg(halve($grid-gutters-initial));\n        margin-left:  neg(halve($grid-gutters-initial));\n    }\n\n}\n\n// [1]\n@each $grid-gutter, $grid-gutter-value in $grid-gutters {\n\n    // Skip the initial value.\n    @if ($grid-gutter != 'initial') {\n\n        .o-grid--#{$grid-gutter} {\n            margin-right:  neg(halve($grid-gutter-value));\n            margin-left:   neg(halve($grid-gutter-value));\n        }\n\n    }\n\n}\n\n\n\n\n\n/**\n * A layout item, used like a column\n *\n * [1] Additional modifier classes for layout gutters.\n */\n.o-grid__column {\n    position: relative;\n    padding-right:  quarter($grid-gutters-initial);\n    padding-left:   quarter($grid-gutters-initial);\n    width: 100%;\n    min-height: 1px;\n    float: left;\n\n    @include media(md) {\n        padding-right:  halve($grid-gutters-initial);\n        padding-left:   halve($grid-gutters-initial);\n    }\n\n    // [1]\n    @each $grid-gutter, $grid-gutter-value in $grid-gutters {\n\n        // Skip the initial value.\n        @if ($grid-gutter != 'initial') {\n\n            .o-grid--#{$grid-gutter} > & {\n                padding-right:  halve($grid-gutter-value);\n                padding-left:   halve($grid-gutter-value);\n            }\n\n        }\n\n    }\n\n}\n\n\n\n\n\n/**\n * Layout Columns\n */\n@for $grid-item-span from 1 through $grid-columns {\n\n    .o-grid__column--#{$grid-item-span} {\n        width: (100% / $grid-columns) * $grid-item-span;\n    }\n\n}\n\n@each $breakpoint in $grid-breakpoints {\n\n    @include media($breakpoint) {\n\n        @for $grid-item-span from 1 through $grid-columns {\n\n            .o-grid__column--#{$grid-item-span}\\@#{$breakpoint} {\n                width: (100% / $grid-columns) * $grid-item-span;\n            }\n\n        }\n\n    }\n\n}\n\n\n\n// Conditionally output layout offsets.\n@if $grid-offsets {\n\n    /**\n     * Offset modifiers for layout items.\n     */\n    @for $grid-item-span from 1 through $grid-columns {\n\n        .o-grid__column--offset-#{$grid-item-span} {\n            margin-left: (100% / $grid-columns) * $grid-item-span;\n        }\n\n    }\n\n    @each $breakpoint in $grid-breakpoints {\n\n        @include media($breakpoint) {\n\n            @for $grid-item-span from 1 through $grid-columns {\n\n                .o-grid__column--offset-#{$grid-item-span}\\@#{$breakpoint} {\n                    margin-left: (100% / $grid-columns) * $grid-item-span;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n\n\n\n\n// Conditionally output layout source ordering.\n@if $grid-push-and-pull {\n\n    /**\n     * Push and Pull modifiers for layout items.\n     */\n    @for $grid-item-span from 1 through $grid-columns {\n\n        .o-grid__column--push-#{$grid-item-span} {\n            left: (100% / $grid-columns) * $grid-item-span;\n        }\n\n        .o-grid__column--pull-#{$grid-item-span} {\n            left: neg((100% / $grid-columns) * $grid-item-span);\n        }\n\n    }\n\n    @each $breakpoint in $grid-breakpoints {\n\n        @include media($breakpoint) {\n\n            @for $grid-item-span from 1 through $grid-columns {\n\n                .o-grid__column--push-#{$grid-item-span}\\@#{$breakpoint} {\n                    left: (100% / $grid-columns) * $grid-item-span;\n                }\n\n                .o-grid__column--pull-#{$grid-item-span}\\@#{$breakpoint} {\n                    left: neg((100% / $grid-columns) * $grid-item-span);\n                }\n\n            }\n\n        }\n\n    }\n\n}\n","///\n/// Clearfix for modern browsers\n///\n/// @ignore\n/// [1] The space content is one way to avoid an Opera bug when the\n///     contenteditable attribute is included anywhere else in the document.\n///     Otherwise it causes space to appear at the top and bottom of elements\n///     that are clearfixed.\n/// [2] The use of `table` rather than `block` is only necessary if using\n///     `:before` to contain the top-margins of child elements.\n///\n@mixin clearfix() {\n\n    &:before,\n    &:after {\n        content: ' '; // [1]\n        display: table; // [2]\n    }\n\n    &:after {\n        clear: both;\n    }\n\n}\n","/*------------------------------------*\\\n    #HEADER\n\\*------------------------------------*/\n\n.c-header {\n    padding: spacer(1) 0 0;\n    text-align: center;\n\n    @include media('sm') {\n        padding: spacer(2) 0 spacer(1);\n        text-align: left;\n    }\n\n}\n\n.c-header__lockup {\n    color: inherit;\n\n    @include link-states() {\n        text-decoration: none;\n    }\n\n}\n\n.c-header__title {\n    margin-bottom: 0;\n    font-size: rem(36px);\n    line-height: 1;\n    font-weight: normal;\n    color: color('headings');\n\n    @include media('sm') {\n        font-size: rem(48px);\n        line-height: .8;\n    }\n\n}\n\n.c-header__tag {\n    color: #f14c10;\n    font-size: rem(14px);\n\n    @include media('sm') {\n        margin: 0;\n        font-size: rem(18px);\n    }\n\n}\n\n.c-header__row {\n\n    @include media('sm') {\n        display: flex;\n        justify-content: space-between;\n    }\n\n}\n"],"sourceRoot":"/source/"}